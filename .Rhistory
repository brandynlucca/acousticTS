target <- FFSgenerate(x=x,y=y,z=z,a=a,g=g,h=h,curve=curve,pc=pc,theta=theta_rad)
devtools::install_github("brandynlucca/acousticTS@test-branch")
devtools::install_github("brandynlucca/acousticTS@test-branch", force=T)
?Shapely
require(acousticTS)
?Shapely
2 + 2
?SDWBA
target_premade
#We will call in a sample krill shape reported by McGehee et al. (1998) from the GitHub repository,
#but this can be applied to any *.csv file with the correct filepath.
target_premade <- FLSread("https://raw.githubusercontent.com/brandynlucca/acousticTS/test-branch/data/mcgehee.csv")
require(acousticTS)
#but this can be applied to any *.csv file with the correct filepath.
target_premade <- FLSread("https://raw.githubusercontent.com/brandynlucca/acousticTS/test-branch/data/mcgehee.csv")
#We can see that the file structure is the same as the previous "target" scatterer, just filled with different values
str(target_premade)
#Now let's run the model on the object
SDWBA(target_premade, c=c, frequency=frequency)
#We will call in a sample krill shape reported by McGehee et al. (1998) from the GitHub repository,
#but this can be applied to any *.csv file with the correct filepath.
target_premade <- FLSread("https://raw.githubusercontent.com/brandynlucca/acousticTS/test-branch/data/mcgehee.csv")
#We can see that the file structure is the same as the previous "target" scatterer, just filled with different values
str(target_premade)
#Now let's run the model on the object
SDWBA(target_premade, c=c, frequency=frequency)
target_premade <- FLSread("https://raw.githubusercontent.com/brandynlucca/acousticTS/test-branch/data/mcgehee.csv")
require(acousticTS)
target_premade <- FLSread("https://raw.githubusercontent.com/brandynlucca/acousticTS/test-branch/data/mcgehee.csv")
?FLSread
?plot
require(acousticTS)
?SDWBA
degrad(90, "deg")
?FLSread
knitr::opts_chunk$set(echo = FALSE)
#California krill
data(cakrill)
#E. pacifica
data(epac)
#N. difficilis
data(ndiff)
#T. spinifera
data(tspin)
cakrill
epac
ndiff
tspin
spp <- read.csv("C:/Users/Brandyn/Downloads/ALES.Summer_2019.CAKrill2019_IDs_raw.csv")
dir <- list.files("G:/CAkrill.2019/model_shapes/", full.names=T)
cakrill <- data.frame(x=c(), y=c(), z=c(), a=c(), h=c(), g=c(), seg=c())
epac <- cakrill
ndif <- cakrill
tspi <- cakrill
for(i in 1:length(dir)){
an <- strsplit(dir[i], split="[/|AN_,+]+")[[1]][6]
file <- read.csv(dir[i])
file$seg <- seq(1,nrow(file),1)
sp <- spp$Species[which(spp$Krill.ID. == an)]
if(sp == "N. difficilis"){
ndif <- rbind(ndif, file)
}else if(sp == "T. spinifera"){
tspi <- rbind(tspi, file)
}else if(sp == "E. pacifica"){
epac <- rbind(epac, file)
}
}
cakrill <- rbind(epac, ndif, tspi)
head(spp)
cakrill
cakrill %>% filter(seg == 1) %>% summarise(x=max(x))
require(dpluyr)
require(dplyr)
cakrill %>% filter(seg == 1) %>% summarise(x=max(x))
cakrill %>% filter(seg == 1) %>% summarise(x=mean(x), sd=sd(x))
cakrill %>% filter(seg == 1) %>% summarise(x=mean(x), sd=sd(x, na.rm=T))
cakrill %>% filter(seg == 1)
cakrill %>% filter(seg == 1) %>% summarise(xmean=mean(x), sd=sd(x, na.rm=T))
#Number of pulls
n <- 20
#CA
SDWBA(cakrill, c=c, frequency=frequency, lengths=rnorm(n,15.5,4.0)*1e-3, phase=0.2, theta=rnorm(n,0,32), parallel=T, aggregate="mean", curve=T)
n <- 20
#CA
SDWBA.sim(cakrill, c=c, frequency=frequency, lengths=rnorm(n,15.5,4.0)*1e-3, phase=0.2, theta=rnorm(n,0,32), parallel=T, aggregate="mean", curve=T)
?SDWBA.sim
tinytex::install_tinytex()
tinytex:::is_tinytex()
require(dplyr)
require(ggplot2)
require(acousticTS)
load("G:/tsp_for_cakrill.RData")
tsp %>%
filter(phase==0.0) %>%
group_by(theta) %>%
summarise(Med=median(TS)) %>%
ggplot(data=.) +
geom_path(aes(x=degrad(theta, "rad"), y=Med), size=2) +
theme_bw() + theme(text=element_text(size=16), axis.text=element_text(size=14, color="black"),
panel.grid=element_blank(), legend.position="false") +
labs(y=expression(paste("Target strength (dB re: 1 ",m^2,")")),
x=expression(paste("Degrees (",degree,")")), color="")
tsp %>%
filter(phase==0.0) %>%
group_by(theta) %>%
summarise(Med=median(TS)) %>%
ggplot(data=.) +
geom_path(aes(x=degrad(theta, "rad"), y=Med), size=2) +
theme_bw() + theme(text=element_text(size=16), axis.text=element_text(size=14, color="black"),
panel.grid=element_blank(), legend.position="false") +
labs(y=expression(paste("Target strength (dB re: 1 ",m^2,")")),
x=expression(paste("Degrees (",degree,")")), color="") +
annotate(geom="curve", x=120, y=-75, xend=90, yend=-67,
curvature=0.3, arrow=arrow(length=unit(5,"mm")), size=2) +
annotate(geom="text", x=150, y=-75, label="Broadside", size=6.5)
tsp %>%
filter(phase==0.0) %>%
group_by(theta) %>%
summarise(Med=median(TS)) %>%
ggplot(data=.) +
geom_path(aes(x=degrad(theta, "rad"), y=Med), size=2) +
theme_bw() + theme(text=element_text(size=16), axis.text=element_text(size=14, color="black"),
panel.grid=element_blank(), legend.position="false") +
labs(y=expression(paste("Target strength (dB re: 1 ",m^2,")")),
x=expression(paste("Degrees (",degree,")")), color="") +
annotate(geom="curve", x=150, y=-72, xend=90, yend=-67,
curvature=0.3, arrow=arrow(length=unit(5,"mm")), size=2) +
annotate(geom="text", x=150, y=-75, label="Broadside", size=6.5)
tsp %>%
filter(phase==0.0) %>%
group_by(theta) %>%
summarise(Med=median(TS)) %>%
ggplot(data=.) +
geom_path(aes(x=degrad(theta, "rad"), y=Med), size=2) +
theme_bw() + theme(text=element_text(size=16), axis.text=element_text(size=14, color="black"),
panel.grid=element_blank(), legend.position="false") +
labs(y=expression(paste("Target strength (dB re: 1 ",m^2,")")),
x=expression(paste("Degrees (",degree,")")), color="") +
annotate(geom="curve", x=150, y=-74, xend=90, yend=-67,
curvature=0.3, arrow=arrow(length=unit(5,"mm")), size=2) +
annotate(geom="text", x=150, y=-75, label="Broadside", size=6.5)
tsp %>%
filter(phase==0.0) %>%
group_by(theta) %>%
summarise(Med=median(TS)) %>%
ggplot(data=.) +
geom_path(aes(x=degrad(theta, "rad"), y=Med), size=2) +
theme_bw() + theme(text=element_text(size=16), axis.text=element_text(size=14, color="black"),
panel.grid=element_blank(), legend.position="false") +
labs(y=expression(paste("Target strength (dB re: 1 ",m^2,")")),
x=expression(paste("Degrees (",degree,")")), color="") +
annotate(geom="curve", x=150, y=-74, xend=88, yend=-67,
curvature=0.3, arrow=arrow(length=unit(5,"mm")), size=2) +
annotate(geom="text", x=150, y=-75, label="Broadside", size=6.5)
tsp %>%
filter(phase==0.0) %>%
group_by(theta) %>%
summarise(Med=median(TS)) %>%
ggplot(data=.) +
geom_path(aes(x=degrad(theta, "rad"), y=Med), size=2) +
theme_bw() + theme(text=element_text(size=16), axis.text=element_text(size=14, color="black"),
panel.grid=element_blank(), legend.position="false") +
labs(y=expression(paste("Target strength (dB re: 1 ",m^2,")")),
x=expression(paste("Degrees (",degree,")")), color="") +
annotate(geom="curve", x=150, y=-74, xend=93, yend=-67,
curvature=0.3, arrow=arrow(length=unit(5,"mm")), size=2) +
annotate(geom="text", x=150, y=-75, label="Broadside", size=6.5)
tsp %>%
filter(phase==0.0) %>%
group_by(theta) %>%
summarise(Med=median(TS)) %>%
ggplot(data=.) +
geom_path(aes(x=degrad(theta, "rad"), y=Med), size=2) +
theme_bw() + theme(text=element_text(size=16), axis.text=element_text(size=14, color="black"),
panel.grid=element_blank(), legend.position="false") +
labs(y=expression(paste("Target strength (dB re: 1 ",m^2,")")),
x=expression(paste("Degrees (",degree,")")), color="") +
annotate(geom="curve", x=150, y=-74, xend=93, yend=-67,
curvature=0.3, arrow=arrow(length=unit(5,"mm")), size=2) +
annotate(geom="text", x=150, y=-75, label="Broadside incidence", size=6.5)
tsp %>%
filter(phase==0.0) %>%
group_by(theta) %>%
summarise(Med=median(TS)) %>%
ggplot(data=.) +
geom_path(aes(x=degrad(theta, "rad"), y=Med), size=2) +
theme_bw() + theme(text=element_text(size=16), axis.text=element_text(size=14, color="black"),
panel.grid=element_blank(), legend.position="false") +
labs(y=expression(paste("Target strength (dB re: 1 ",m^2,")")),
x=expression(paste("Degrees (",degree,")")), color="") +
annotate(geom="curve", x=150, y=-74, xend=93, yend=-67,
curvature=0.3, arrow=arrow(length=unit(5,"mm")), size=2) +
annotate(geom="text", x=150, y=-75, label="Broadside", size=6.5)
?SDWBA
?runif
?rnorm
?runif
31^2
files <- list.files("G:/CAkrill.2019/model_shapes/", full.names=T)
shdf <- data.frame(x=c(), y=c(), An=c(), Bin=c(), i=c())
for(i in 1:length(files)){
test <- read.csv(files[i])
x <- c(test$x,rev(test$x))/max(test$x)
y <- c(test$z/2,-rev(test$z)/2)/max(test$x)
# y <- c(0-test$a,0,0+test$a)/max(test$x)
filestr1 <- unlist(strsplit(files[i],"/"))
filestr2 <- unlist(strsplit(filestr1[length(filestr1)],"[.]"))
filestr3 <- unlist(strsplit(unlist(filestr2)[1],"_"))
tmpdf <- data.frame(x=x, y=y, An=filestr3[2], i=i)
tmpdf$Bin <- seq(1,nrow(tmpdf),1)
print(max(tmpdf$Bin))
print(tmpdf$x[1])
shdf <- rbind(shdf, tmpdf)
}
head(krillspp)
spp <- read.csv("C:/Users/Brandyn/Downloads/ALES.Summer_2019.CAKrill2019_IDs_raw.csv")
shdf$Sp <- NA
i=1
head(spp)
colnames(spp)[2] <- "An_ID"
idx <- which(spp$An_ID == shdf$An[i])
idx
shdf$An[i]
head(shdf)
# y <- c(0-test$a,0,0+test$a)/max(test$x)
filestr1 <- unlist(strsplit(files[i],"/"))
filestr2 <- unlist(strsplit(filestr1[length(filestr1)],"[.]"))
filestr1
filestr2
filestr3
filestr4 <- unlist(strsplit(filestr4,"AN"))
filestr4 <- unlist(strsplit(filestr3,"AN"))
filestr3
strsplit(filestr3,"AN")
filestr4 <- unlist(strsplit(filestr3,"AN"))
filestr4
shdf <- data.frame(x=c(), y=c(), An=c(), Bin=c(), i=c())
for(i in 1:length(files)){
test <- read.csv(files[i])
x <- c(test$x,rev(test$x))/max(test$x)
y <- c(test$z/2,-rev(test$z)/2)/max(test$x)
# y <- c(0-test$a,0,0+test$a)/max(test$x)
filestr1 <- unlist(strsplit(files[i],"/"))
filestr2 <- unlist(strsplit(filestr1[length(filestr1)],"[.]"))
filestr3 <- unlist(strsplit(unlist(filestr2)[1],"_"))[1]
filestr4 <- unlist(strsplit(filestr3,"AN"))[2]
tmpdf <- data.frame(x=x, y=y, An=filestr4, i=i)
tmpdf$Bin <- seq(1,nrow(tmpdf),1)
# print(max(tmpdf$Bin))
# print(tmpdf$x[1])
shdf <- rbind(shdf, tmpdf)
}
spp <- read.csv("C:/Users/Brandyn/Downloads/ALES.Summer_2019.CAKrill2019_IDs_raw.csv")
colnames(spp)[2] <- "An_ID"
shdf$Sp <- NA
i=1
idx <- which(spp$An_ID == shdf$An[i])
idx
shdf$Sp <- NA
for(i in 1:nrow(shdf)){
idx <- which(spp$An_ID == shdf$An[i])
shdf$Sp[i] <- as.character(spp16$Species[idx])
}
spp <- read.csv("C:/Users/Brandyn/Downloads/ALES.Summer_2019.CAKrill2019_IDs_raw.csv")
colnames(spp)[2] <- "An_ID"
shdf$Sp <- NA
for(i in 1:nrow(shdf)){
idx <- which(spp$An_ID == shdf$An[i])
shdf$Sp[i] <- as.character(spp$Species[idx])
}
head(shdf)
require(dplyr)
newsdf <- shdf %>%
group_by(Sp, Bin) %>%
summarise(x=mean(x), Mean=mean(y), SD=stats::sd(y), An=An[1])
ggplot(data=newsdf,aes(x=x,y=Mean)) +
geom_point() +
geom_path() +
geom_errorbar(aes(x=x,ymin=Mean-SD, ymax=Mean+SD)) +
facet_wrap(~Sp) +
coord_cartesian(ylim=c(-0.295,0.295)) +
theme_bw() +
theme(panel.grid=element_blank(), strip.background=element_blank(), strip.text=element_blank(),
text=element_text(size=18), axis.text=element_text(size=16, color="black"), axis.text.x=element_text(angle=90)) +
labs(x="Scale length",y="Scaled height")
unique(shdf$Sp)
newsdf <- shdf %>%
filter(Sp %in% c("N. difficilis","T. spinifera","E. pacifica")) %>%
group_by(Sp, Bin) %>%
summarise(x=mean(x), Mean=mean(y), SD=stats::sd(y), An=An[1])
unique(newsdf$Sp)
ggplot(data=newsdf,aes(x=x,y=Mean)) +
geom_point() +
geom_path() +
geom_errorbar(aes(x=x,ymin=Mean-SD, ymax=Mean+SD)) +
facet_wrap(~Sp) +
coord_cartesian(ylim=c(-0.295,0.295)) +
theme_bw() +
theme(panel.grid=element_blank(), strip.background=element_blank(), strip.text=element_blank(),
text=element_text(size=18), axis.text=element_text(size=16, color="black"), axis.text.x=element_text(angle=90)) +
labs(x="Scale length",y="Scaled height")
newsdf
newsdf[c(1,18),]
newsdf[c(1,35),]
newsdf[c(2,36),]
unique(shdf$Sp)
ggplot(data=newsdf,aes(x=x,y=Mean)) +
geom_point() +
geom_path() +
geom_errorbar(aes(x=x,ymin=Mean-SD, ymax=Mean+SD)) +
facet_wrap(~Sp) +
coord_cartesian(ylim=c(-0.295,0.295)) +
theme_bw() +
theme(panel.grid=element_blank(), strip.background=element_blank(), strip.text=element_blank(),
text=element_text(size=18), axis.text=element_text(size=16, color="black"), axis.text.x=element_text(angle=90)) +
labs(x="Scale length",y="Scaled height") +
geom_text(aes(x=x,y=y,label=lab),
data=data.frame(x=rep(0.35,4),y=rep(0.275,4),Sp=unique(shdf$Sp),
lab=c("N. difficilis","T. spinifera","E. pacifica")), size=4.5)
ggplot(data=newsdf,aes(x=x,y=Mean)) +
geom_point() +
geom_path() +
geom_errorbar(aes(x=x,ymin=Mean-SD, ymax=Mean+SD)) +
facet_wrap(~Sp) +
coord_cartesian(ylim=c(-0.295,0.295)) +
theme_bw() +
theme(panel.grid=element_blank(), strip.background=element_blank(), strip.text=element_blank(),
text=element_text(size=18), axis.text=element_text(size=16, color="black"), axis.text.x=element_text(angle=90)) +
labs(x="Scale length",y="Scaled height") +
geom_text(aes(x=x,y=y,label=lab),
data=data.frame(x=x=0.35, y=0.2, Sp=unique(shdf$Sp),
lab=c("N. difficilis","T. spinifera","E. pacifica")), size=4.5)
ggplot(data=newsdf,aes(x=x,y=Mean)) +
geom_point() +
geom_path() +
geom_errorbar(aes(x=x,ymin=Mean-SD, ymax=Mean+SD)) +
facet_wrap(~Sp) +
coord_cartesian(ylim=c(-0.295,0.295)) +
theme_bw() +
theme(panel.grid=element_blank(), strip.background=element_blank(), strip.text=element_blank(),
text=element_text(size=18), axis.text=element_text(size=16, color="black"), axis.text.x=element_text(angle=90)) +
labs(x="Scale length",y="Scaled height") +
geom_text(aes(x=x,y=y,label=lab),
data=data.frame(x=0.35, y=0.2, Sp=unique(shdf$Sp),
lab=c("N. difficilis","T. spinifera","E. pacifica")), size=4.5)
ggplot(data=newsdf,aes(x=x,y=Mean)) +
geom_point() +
geom_path() +
geom_errorbar(aes(x=x,ymin=Mean-SD, ymax=Mean+SD)) +
facet_wrap(~Sp) +
coord_cartesian(ylim=c(-0.295,0.295)) +
theme_bw() +
theme(panel.grid=element_blank(), strip.background=element_blank(), strip.text=element_blank(),
text=element_text(size=18), axis.text=element_text(size=16, color="black"), axis.text.x=element_text(angle=90)) +
labs(x="Scale length",y="Scaled height") +
geom_text(aes(x=x,y=y,label=lab),
data=data.frame(x=0.35, y=0.2, Sp=unique(newsdf$Sp),
lab=c("N. difficilis","T. spinifera","E. pacifica")), size=4.5)
ggplot(data=newsdf,aes(x=x,y=Mean)) +
geom_point() +
geom_path() +
geom_errorbar(aes(x=x,ymin=Mean-SD, ymax=Mean+SD)) +
facet_wrap(~Sp) +
coord_cartesian(ylim=c(-0.295,0.295)) +
theme_bw() +
theme(panel.grid=element_blank(), strip.background=element_blank(), strip.text=element_blank(),
text=element_text(size=18), axis.text=element_text(size=16, color="black"), axis.text.x=element_text(angle=90)) +
labs(x="Scale length",y="Scaled height") +
geom_text(aes(x=x,y=y,label=lab),
data=data.frame(x=0.35, y=0.2, Sp=unique(newsdf$Sp),
lab=c("N. difficilis","T. spinifera","E. pacifica")), size=5.5)
ggplot(data=newsdf,aes(x=x,y=Mean)) +
geom_point() +
geom_path() +
geom_errorbar(aes(x=x,ymin=Mean-SD, ymax=Mean+SD)) +
facet_wrap(~Sp) +
coord_cartesian(ylim=c(-0.25,0.255)) +
theme_bw() +
theme(panel.grid=element_blank(), strip.background=element_blank(), strip.text=element_blank(),
text=element_text(size=18), axis.text=element_text(size=16, color="black"), axis.text.x=element_text(angle=90)) +
labs(x="Scale length",y="Scaled height") +
geom_text(aes(x=x,y=y,label=lab),
data=data.frame(x=0.35, y=0.2, Sp=unique(newsdf$Sp),
lab=c("N. difficilis","T. spinifera","E. pacifica")), size=5.5)
save(newsdf, file="G:/CAkrill_reco_shapes.RData")
newsdf
newsdf[newsdf$Bin %in% c(2,4,6,8),]
newsdf <- shdf %>%
filter(Sp %in% c("N. difficilis","T. spinifera","E. pacifica")) %>%
group_by(Sp, Bin) %>%
summarise(x=mean(x), Mean=mean(y), SD=stats::sd(y), An=An[1], n=n())
newsdf
data(epac)
epac
?SDWBA
?SDWBA.sim
n <- 100 #total population
#Number of pulls
#Epac
epac_ts <- SDWBA.sim(epac, c=c, frequency=frequency, length=rnorm(n*0.6,14.3,3.4)*1e-3, phase=0.2, curve=T, pc=3.3, theta=rnorm(n*0.6,1.1,32), parallel=T, aggregate="mean", curve=T)
#Tspin
tspin_ts <- SDWBA.sim(tspin, c=c, frequency=frequency, length=rnorm(n*0.3,18.8,2.9)*1e-3, phase=0.2, curve=T, pc=3.3, theta=rnorm(n*0.3,1.1,32), parallel=T, aggregate="mean", curve=T)
#Ndiff
ndiff_ts <- SDWBA.sim(ndiff, c=c, frequency=frequency, length=rnorm(n*0.1,15.6,2.4)*1e-3, phase=0.2, curve=T, pc=3.3, theta=rnorm(n*0.1,1.1,32), parallel=T, aggregate="mean", curve=T)
#Number of pulls
#Epac
epac_ts <- SDWBA.sim(epac, c=c, frequency=frequency, length=rnorm(n*0.6,14.3,3.4)*1e-3, phase=0.2, curve=T, pc=3.3, theta=rnorm(n*0.6,1.1,32), parallel=T)
#Number of pulls
#Epac
epac_ts <- SDWBA.sim(epac, c=1500, frequency=120e3, length=rnorm(n*0.6,14.3,3.4)*1e-3, phase=0.2, curve=T, pc=3.3, theta=rnorm(n*0.6,1.1,32), parallel=T)
#Tspin
tspin_ts <- SDWBA.sim(tspin, c=1500, frequency=120e3, length=rnorm(n*0.3,18.8,2.9)*1e-3, phase=0.2, curve=T, pc=3.3, theta=rnorm(n*0.3,1.1,32), parallel=T)
#Ndiff
ndiff_ts <- SDWBA.sim(ndiff, c=1500, frequency=120e3, length=rnorm(n*0.1,15.6,2.4)*1e-3, phase=0.2, curve=T, pc=3.3, theta=rnorm(n*0.1,1.1,32), parallel=T)
set.seed(999)
n <- 100 #total population
#Number of pulls
#Epac
epac_ts <- SDWBA.sim(epac, c=1500, frequency=120e3, length=rnorm(n*0.6,14.3,3.4)*1e-3, phase=0.2, curve=T, pc=3.3, theta=rnorm(n*0.6,1.1,32), parallel=T)
#Tspin
tspin_ts <- SDWBA.sim(tspin, c=1500, frequency=120e3, length=rnorm(n*0.3,18.8,2.9)*1e-3, phase=0.2, curve=T, pc=3.3, theta=rnorm(n*0.3,1.1,32), parallel=T)
#Ndiff
ndiff_ts <- SDWBA.sim(ndiff, c=1500, frequency=120e3, length=rnorm(n*0.1,15.6,2.4)*1e-3, phase=0.2, curve=T, pc=3.3, theta=rnorm(n*0.1,1.1,32), parallel=T)
save(epac_ts, file="G:/CAkrill_reco_epac_ts.RData")
save(tspin_ts, file="G:/CAkrill_reco_tspin_ts.RData")
save(ndiff_ts, file="G:/CAkrill_reco_ndiff_ts.RData")
bind_rows(epac_ts, ndiff_ts, tspin_ts) %>% summarise(Med=median(TS))
bind_rows(epac_ts, tspin_ts, ndiff_ts) %>%
summarise(Mean=10*log10(mean(10^(TS/10))), Median=median(TS), StDev=10*log10(stats::sd(10^(TS/10))))
bind_rows(epac_ts, tspin_ts, ndiff_ts) %>%
summarise(Mean=10*log10(mean(10^(TS/10))), Median=median(TS), LowerCI95=order(TS)[3], UpperCI95=order(TS)[97])
require(dplyr)
bind_rows(epac_ts, tspin_ts, ndiff_ts) %>%
arrange(TS) %>%
summarise(Mean=10*log10(mean(10^(TS/10))), Median=median(TS), LowerCI95=TS[3], UpperCI95=TS[97])
bind_rows(epac_ts, tspin_ts, ndiff_ts)
ggg <- bind_rows(epac_ts, tspin_ts, ndiff_ts)
ggg
nrow(ggg)
nrow(ggg) * 0.975
require(dplyr)
bind_rows(epac_ts, tspin_ts, ndiff_ts) %>%
arrange(TS) %>%
summarise(Mean=10*log10(mean(10^(TS/10))), Median=median(TS), LowerCI95=TS[0.025*n()], UpperCI95=TS[0.975*n()])
hdf %>%
filter(Sp %in% c("N. difficilis","T. spinifera","E. pacifica")) %>%
group_by(Sp, Bin) %>%
summarise(x=mean(x), Mean=mean(y), SD=stats::sd(y), An=An[1], n=n())
shdf %>%
filter(Sp %in% c("N. difficilis","T. spinifera","E. pacifica")) %>%
group_by(Sp, Bin) %>%
summarise(x=mean(x), Mean=mean(y), SD=stats::sd(y), An=An[1], n=n())
shdf %>%
filter(Sp %in% c("N. difficilis","T. spinifera","E. pacifica")) %>%
group_by(Sp, Bin) %>%
summarise(x=mean(x), Mean=mean(y), SD=stats::sd(y),  n=n())
newsdf[c(15,15*2,15*3,15*4,15*5,15*6),]
ggplot(data=newsdf,aes(x=x,y=Mean)) +
geom_point() +
geom_path() +
geom_errorbar(aes(x=x,ymin=Mean-SD, ymax=Mean+SD))
ggplot(data=newsdf,aes(x=x,y=Mean)) +
geom_point() +
geom_path() +
geom_errorbar(aes(x=x,ymin=Mean-SD, ymax=Mean+SD)) +
facet_wrap(~Sp)
getwd()
setwd("C:/Users/Brandyn/Documents/GitHub/acousticTS/")
roxygen2::roxygenise()
devtools::check_man()
new.env()
new.env(parent=env)
e < new.env()
e <- new.env()
unlockEnvironment <- function (env) {
return (new.env(parent=env))
}
e <- unlockEnvironment(e)
devtools::check_man()
load("C:/Users/Brandyn/Documents/GitHub/acousticTS/R/.RData")
roxygen2::roxygenise()
devtools::check_man()
roxygen2::roxygenise()
devtools::check_man()
devtools::build()
devtools::load_all()
devtools::check_man()
devtools::load_all(".")
devtools::test()
devtools::test()
devtools::check()
roxygen2::roxygenise()
?SDWBA
roxygen2::roxygenise()
devtools::check()
?check
requireNamespace(foreach, quietly=T)
requireNamespace(parallel, quietly=T)
?requireNamespace
roxygen2::roxygenise()
devtools::check()
devtools::use_mit_license
devtools::use_mit_license()
roxygen2::roxygenise()
devtools::check()
?median
?new
?median
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::check()
?new
