p1 + geom_text(data=lens, aes(x=50, y=-75, label=paste(Species,"\n",Length," mm \ng = ",g,sep="")), size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-75, label=paste("theta==",Theta,"*degree \n ",sep="")), parse=T, size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-77.5, label=paste("rho[c]==",pc,sep="")), parse=T, size=5.5, hjust=0)
p1 + geom_text(data=lens, aes(x=50, y=-75, label=paste(Species,"\n",Length," mm \ng = ",g,sep="")), size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-75, label=paste("theta==",Theta,"*degree \n ",sep="")), parse=T, size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-78, label=paste("rho[c]==",pc,sep="")), parse=T, size=5.5, hjust=0)
p1 + geom_text(data=lens, aes(x=50, y=-75, label=paste(Species,"\n",Length," mm \ng = ",g,sep="")), size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-75, label=paste("theta==",Theta,"*degree \n ",sep="")), parse=T, size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-79, label=paste("rho[c]==",pc,sep="")), parse=T, size=5.5, hjust=0)
p1 + geom_text(data=lens, aes(x=50, y=-75, label=paste(Species,"\n",Length," mm \ng = ",g,sep="")), size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-75, label=paste("theta==",Theta,"*degree \n ",sep="")), parse=T, size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-78.5, label=paste("rho[c]==",pc,sep="")), parse=T, size=5.5, hjust=0)
p1 + geom_text(data=lens, aes(x=50, y=-75, label=paste(Species,"\n",Length," mm \ng = ",g,sep="")), size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-75, label=paste("theta==",Theta,"*degree \n ",sep="")), parse=T, size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-78.5, label=paste("italic(rho)[c]==",pc,sep="")), parse=T, size=5.5, hjust=0)
p1 + geom_text(data=lens, aes(x=50, y=-75, label=paste(Species,"\n",Length," mm \nitalic(g) = ",g,sep="")), size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-75, label=paste("theta==",Theta,"*degree \n ",sep="")), parse=T, size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-78.5, label=paste("italic(rho)[c]==",pc,sep="")), parse=T, size=5.5, hjust=0)
p1 + geom_text(data=lens, aes(x=50, y=-75, label=paste(Species,"\n",Length," mm \nitalic(g) = ",g,sep="")), parse=T size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-75, label=paste("theta==",Theta,"*degree \n ",sep="")), parse=T, size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-78.5, label=paste("italic(rho)[c]==",pc,sep="")), parse=T, size=5.5, hjust=0)
p1 + geom_text(data=lens, aes(x=50, y=-75, label=paste(Species,"\n",Length," mm \nitalic(g) = ",g,sep="")), parse=T, size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-75, label=paste("theta==",Theta,"*degree \n ",sep="")), parse=T, size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-78.5, label=paste("italic(rho)[c]==",pc,sep="")), parse=T, size=5.5, hjust=0)
p1 + geom_text(data=lens, aes(x=50, y=-75, label=paste(Species,"\n",Length," mm \ng = ",g,sep="")), parse=T, size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-75, label=paste("theta==",Theta,"*degree \n ",sep="")), parse=T, size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-78.5, label=paste("italic(rho)[c]==",pc,sep="")), parse=T, size=5.5, hjust=0)
p1 + geom_text(data=lens, aes(x=50, y=-75, label=paste(Species,"\n",Length," mm \ng = ",g,sep="")), size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-75, label=paste("theta==",Theta,"*degree \n ",sep="")), parse=T, size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-78.5, label=paste("italic(rho)[c]==",pc,sep="")), parse=T, size=5.5, hjust=0)
p1 + geom_text(data=lens, aes(x=40, y=-75, label=paste(Species,"\n",Length," mm \ng = ",g,sep="")), size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-75, label=paste("theta==",Theta,"*degree \n ",sep="")), parse=T, size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-78.5, label=paste("italic(rho)[c]==",pc,sep="")), parse=T, size=5.5, hjust=0)
p1 + geom_text(data=lens, aes(x=40, y=-75, label=paste(Species,"\n",Length," mm \ng = ",g,sep="")), size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-70, label=paste("theta==",Theta,"*degree \n ",sep="")), parse=T, size=5.5, hjust=0) +
geom_text(data=lens, aes(x=90,y=-73.5, label=paste("italic(rho)[c]==",pc,sep="")), parse=T, size=5.5, hjust=0)
?BesselJ
?besselJ
library(devtools)
library(roxygen2)
setwd("G:/R-files/acousticTS")
document()
setwd("..")
install()
install("acousticTS")
library(acousticTS)
?FS-class
?FFS-class
?`FFS-class`
?SDWBA
?ja
?SDWBA
document()
setwd("G:/R-files/acousticTS")
document()
?SDWBA
document()
?SDWBA
?roxygen2
?document
?SDWBA
?document
document()
?SDWBA
document()
?SDWBA
document()
?SDWBA
document()
?SDWBA
?document
#Create S4 class object to contain all animal metadata
FFS <- setClass("FFS",slots=c(rpos="matrix", a="numeric", g="numeric", h="numeric", theta="numeric",
shape="character",pc="numeric"))
#Calculate acoustic wavenumber based on the sound speed of water
kcalc <- function(f,c){2*pi*f/c}
document()
?FFS
document()
?SDWBA
document()
?SDWBA
document()
?SDWBA
document()
?SDWBA
document()
?SDWBA
document()
?SDWBA
document()
?SDWBA
document()
?SDWBA
document
document()
?SDWBA
document
document()
?SDWBA
?kcalc
?FFS
1i
#DFCM_simple
DFCM_simple <- function(shape, L=max(shape@rpos[,1]), a=max(shape@a), g=shape@g, h=shape@h, pc=shape@pc, numdiv=length(shape@rpos[1,]),
tilt=shape@theta, cm=1500, pm=1.025, f, alpha=0.8){
ca <- h*cm #animal soundspeed
pa <- g*pm #animal density
a_new <- L/numdiv
R12 <- ((pa*cm)/(cm*pa)-1) / (pa*ca/(pm*cm)+1)
km <- kcalc(f,cm)
ka <- kcalc(f,ca)
T12 <- 2*(pa*ca/(pm*cm))/(1+(pa*ca/(pm*cm)))
T21 <- 2*(pm*cm/(pa*ca))/(1+(pm*cm/(pa*ca)))
rad_curv <- pc * L #radius of curvature
mu <- -pi/2*km*a_new / (km*a_new+0.4)
Io <- 1 - T12 * T21 * exp(1i*4*ka*a_new) * exp(1i*mu)
fbs <- 0.5*sqrt(rad_curv*a_new) * R12 * exp(-1i*2*km*a_new) * Io * exp(-alpha*(2*tilt*rad_curv/L)^2)
TS <- 20*log10(abs(fbs))
return(TS)
}
return(new("shape_an", rpos=as.matrix(rbind(animal$x,animal$y,animal$z)),a=animal$a, g=animal$g[1],
h=animal$h[1],
theta=90,
shape="straight",pc=0.0))}
return(new("shape_an", rpos=as.matrix(rbind(animal$x,animal$y,animal$z)),a=animal$a, g=animal$g[1],
h=animal$h[1],
theta=90,
shape="straight",pc=0.0))}
#Call in shape from a *.csv file
##File must have columns provided by McGehee et al. (1998), plus additional parametrization:
##x,y,z for position matrix, a for radius, g and h for material properties, theta for tilt angle
shape_file <- function(file){
animal <- read.csv(file, header=T) #Call in *.csv file; assumes headers are present
return(new("shape_an", rpos=as.matrix(rbind(animal$x,animal$y,animal$z)),a=animal$a, g=animal$g[1],
h=animal$h[1],
theta=90,
shape="straight",pc=0.0))}
# shapedir <- "G:/alaska.2016/dump3/"
shapedir <- "G:/CAKrill.2019/model_shapes/"
shapefiles <- list.files(shapedir, pattern="_shape")
i = 1
animal <- shape_file(paste(shapedir,shapefiles[i],sep=""))
animal
DFCM_simple(animal, 120e3)
DFCM_simple(animal, f=120e3)
shape = animal
max(shape@rpos[,1])
L=max(shape@rpos[,1])
a=max(shape@a)
g=shape@g
h=shape@h
pc=shape@pc
numdiv=length(shape@rpos[1,])
tilt=shape@theta
#Curve animal
##Default is 2.0*max length of the animal (Stanton, 1993)
curve_animal <- function(animal,pc=2.2){animal@shape="curved";animal@pc=pc*max(animal@rpos[1,]);return(animal)}
anc <- curve_animal(animal, pc=2.2)
anc
DFCM_simple(anc f=120e3)
DFCM_simple(anc, f=120e3)
f=120e3
ca <- h*cm #animal soundspeed
pa <- g*pm #animal density
cm=1500
pm=1.025
alpha=0.8
ca <- h*cm #animal soundspeed
pa <- g*pm #animal density
a_new <- L/numdiv
R12 <- ((pa*cm)/(cm*pa)-1) / (pa*ca/(pm*cm)+1)
R12
(pa*cm)/(cm*pa)-1)
((pa*cm)/(cm*pa)-1)
shape@g
shape@h
ca
pa
R12 <- ((pa*ca)/(cm*pm)-1) / (pa*ca/(pm*cm)+1)
R12
km <- kcalc(f,cm)
ka <- kcalc(f,ca)
T12 <- 2*(pa*ca/(pm*cm))/(1+(pa*ca/(pm*cm)))
T21 <- 2*(pm*cm/(pa*ca))/(1+(pm*cm/(pa*ca)))
rad_curv <- pc * L #radius of curvature
mu <- -pi/2*km*a_new / (km*a_new+0.4)
Io <- 1 - T12 * T21 * exp(1i*4*ka*a_new) * exp(1i*mu)
fbs <- 0.5*sqrt(rad_curv*a_new) * R12 * exp(-1i*2*km*a_new) * Io * exp(-alpha*(2*tilt*rad_curv/L)^2)
TS
fbs <- 0.5*sqrt(rad_curv*a_new) * R12 * exp(-1i*2*km*a_new) * Io * exp(-alpha*(2*tilt*rad_curv/L)^2)
TS <- 20*log10(abs(fbs))
TS
Io
fbs
abs(fbs)
sqrt(rad_curv*a_new)
a_new
rad_curv
pc=shape@pc
ca <- h*cm #animal soundspeed
pa <- g*pm #animal density
a_new <- L/numdiv
R12 <- ((pa*ca)/(cm*pm)-1) / (pa*ca/(pm*cm)+1)
km <- kcalc(f,cm)
ka <- kcalc(f,ca)
T12 <- 2*(pa*ca/(pm*cm))/(1+(pa*ca/(pm*cm)))
T21 <- 2*(pm*cm/(pa*ca))/(1+(pm*cm/(pa*ca)))
rad_curv <- pc * L #radius of curvature
mu <- -pi/2*km*a_new / (km*a_new+0.4)
Io <- 1 - T12 * T21 * exp(1i*4*ka*a_new) * exp(1i*mu)
fbs <- 0.5*sqrt(rad_curv*a_new) * R12 * exp(-1i*2*km*a_new) * Io * exp(-alpha*(2*tilt*rad_curv/L)^2)
TS <- 20*log10(abs(fbs))
TS
rad_curv*a_new
ca <- h*cm #animal soundspeed
pa <- g*pm #animal density
a_new <- L/numdiv
R12 <- ((pa*ca)/(cm*pm)-1) / (pa*ca/(pm*cm)+1)
km <- kcalc(f,cm)
ka <- kcalc(f,ca)
T12 <- 2*(pa*ca/(pm*cm))/(1+(pa*ca/(pm*cm)))
pc
shape = anc
pc=shape@pc
rad_curv <- pc * L #radius of curvature
mu <- -pi/2*km*a_new / (km*a_new+0.4)
Io <- 1 - T12 * T21 * exp(1i*4*ka*a_new) * exp(1i*mu)
fbs <- 0.5*sqrt(rad_curv*a_new) * R12 * exp(-1i*2*km*a_new) * Io * exp(-alpha*(2*tilt*rad_curv/L)^2)
TS <- 20*log10(abs(fbs))
TS
anc@a
max(anc@a)
1.9e-3
L
max(anc@rpos)
a = 1.9E-3
rho_c_div_L = 2.2
L = 29E-3
Ldiva = 16
a = L/Ldiva
a_new
a
Theta = 0
g = 1.0357
rho1 = 1.025
rho2 = g*rho1
h = 1.0279
c1 = 1500
c2 = h*c1
a = 1.9E-3
rho_c_div_L = 2.2
L = 29E-3
Ldiva = 16
a = L/Ldiva
R_12 = ((rho2*c2)/(rho1*c1)-1) / (rho2*c2/(rho2*c1)+1)
R_12
R12
k1 = 2*pi*freq/c1
k2 = 2*pi*freq/c2
freq=120e3
k1 = 2*pi*freq/c1
k2 = 2*pi*freq/c2
ka
km
k1
k2
T_12 = 2*(rho2*c2/(rho1*c1))/(1+(rho2*c2/(rho1*c1)))
T_21 = 2*(rho1*c1/(rho2*c2))/(1+(rho1*c1/(rho2*c2)))
T_12
T12
T_21
T21
rho_c = rho_c_div_L * L
rhO_c
rho_c
rad_curv
pc
shape@pc
anc
anc@pc
anc <- curve_animal(animal)
anc
anc <- curve_animal(animal, pc=2.2)
anc
#Curve animal
##Default is 2.0*max length of the animal (Stanton, 1993)
curve_animal <- function(animal,pc=2.2){animal@shape="curved";animal@pc=pc*max(animal@rpos[1,]);return(animal)}
fbs <- 0.5*sqrt(rad_curv*a_new) * R12 * exp(-1i*2*km*a_new) * Io * exp(-alpha*(2*tilt*pc/L)^2)
TS <- 20*log10(abs(fbs))
TS
fbs <- 0.5*sqrt(pc*a_new) * R12 * exp(-1i*2*km*a_new) * Io * exp(-alpha*(2*tilt*pc/L)^2)
TS <- 20*log10(abs(fbs))
ca <- h*cm #animal soundspeed
pa <- g*pm #animal density
a_new <- L/numdiv
R12 <- ((pa*ca)/(cm*pm)-1) / (pa*ca/(pm*cm)+1)
km <- kcalc(f,cm)
ka <- kcalc(f,ca)
T12 <- 2*(pa*ca/(pm*cm))/(1+(pa*ca/(pm*cm)))
T21 <- 2*(pm*cm/(pa*ca))/(1+(pm*cm/(pa*ca)))
T21
L=max(shape@rpos[,1])
a=max(shape@a)
g=shape@g
h=shape@h
pc=shape@pc
numdiv=length(shape@rpos[1,])
numdiv
tilt=shape@theta
cm=1500
pm=1.025
alpha=0.8
tilt
ca <- h*cm #animal soundspeed
pa <- g*pm #animal density
a_new <- L/numdiv
R12 <- ((pa*ca)/(cm*pm)-1) / (pa*ca/(pm*cm)+1)
km <- kcalc(f,cm)
ka <- kcalc(f,ca)
T12 <- 2*(pa*ca/(pm*cm))/(1+(pa*ca/(pm*cm)))
T21 <- 2*(pm*cm/(pa*ca))/(1+(pm*cm/(pa*ca)))
mu <- -pi/2*km*a_new / (km*a_new+0.4)
Io <- 1 - T12 * T21 * exp(1i*4*ka*a_new) * exp(1i*mu)
fbs <- 0.5*sqrt(pc*a_new) * R12 * exp(-1i*2*km*a_new) * Io * exp(-alpha*(2*tilt*pc/L)^2)
TS <- 20*log10(abs(fbs))
TS
ca <- h*cm #animal soundspeed
pa <- g*pm #animal density
a_new <- L/numdiv
R12 <- ((pa*ca)/(cm*pm)-1) / (pa*ca/(pm*cm)+1)
km <- kcalc(f,cm)
ka <- kcalc(f,ca)
T12 <- 2*(pa*ca/(pm*cm))/(1+(pa*ca/(pm*cm)))
T21
T12
mu <- -pi/2*km*a_new / (km*a_new+0.4)
mu
Io
Io <- 1 - T12 * T21 * exp(1i*4*ka*a_new) * exp(1i*mu)
0.5*sqrt(pc*a_new)
0.5*sqrt(pc*a_new) * R12
0.5*sqrt(pc*a_new) * R12 * exp(-1i*2*km*a_new)
0.5*sqrt(pc*a_new) * R12 * exp(-1i*2*km*a_new) * Io
0.5*sqrt(pc*a_new) * R12 * exp(-1i*2*km*a_new) * Io * exp(-alpha*(2*tilt*pc/L)^2)
-alpha
(2*tilt*pc/L)
(2*tilt*pc/L)^2
tilt
tilt=degrad(shape@theta,"deg")
-alpha*(2*tilt*pc/L)^2
fbs <- 0.5*sqrt(pc*a_new) * R12 * exp(-1i*2*km*a_new) * Io * exp(-alpha*(2*tilt*pc/L)^2)
TS <- 20*log10(abs(fbs))
TS
tilt = 0
fbs <- 0.5*sqrt(pc*a_new) * R12 * exp(-1i*2*km*a_new) * Io * exp(-alpha*(2*tilt*pc/L)^2)
TS <- 20*log10(abs(fbs))
TS
degrad(90,"deg")
#DFCM_simple
DFCM_simple <- function(shape, L=max(shape@rpos[,1]), a=max(shape@a), g=shape@g, h=shape@h, pc=shape@pc, numdiv=length(shape@rpos[1,]),
tilt=shape@theta, cm=1500, pm=1.025, f, alpha=0.8){
ca <- h*cm #animal soundspeed
pa <- g*pm #animal density
a_new <- L/numdiv
R12 <- ((pa*ca)/(cm*pm)-1) / (pa*ca/(pm*cm)+1)
km <- kcalc(f,cm)
ka <- kcalc(f,ca)
T12 <- 2*(pa*ca/(pm*cm))/(1+(pa*ca/(pm*cm)))
T21 <- 2*(pm*cm/(pa*ca))/(1+(pm*cm/(pa*ca)))
mu <- -pi/2*km*a_new / (km*a_new+0.4)
Io <- 1 - T12 * T21 * exp(1i*4*ka*a_new) * exp(1i*mu)
fbs <- 0.5*sqrt(pc*a_new) * R12 * exp(-1i*2*km*a_new) * Io * exp(-alpha*(2*(tilt-pi/2)*pc/L)^2)
TS <- 20*log10(abs(fbs))
return(TS)
}
DFCM_simple(anc, f=120e3)
anc
anc@theta <- degrad(anc@theta, "deg")
DFCM_simple(anc, f=120e3)
freqs <- seq(1e3,300e3,1e3)
ts <- rep(NA, freqs)
ts <- c(rep(NA, freqs))
ts <- rep(NA, length(freqs)0)
ts <- rep(NA, length(freqs))
for(i in 1:length(freqs)){
ts <- c(ts, DFCM_simple(anc, f=freqs[i]))
}
plot(ts)
plot(freqs, ts)
length(freqs)
length(ts)
ts <- rep(NA, length(freqs))
for(i in 1:length(freqs)){
ts[i] <- DFCM_simple(anc, f=freqs[i])
}
plot(freqs, ts)
freqs <- seq(1e3,600e3,1e3)
ts <- rep(NA, length(freqs))
for(i in 1:length(freqs)){
ts[i] <- DFCM_simple(anc, f=freqs[i])
}
plot(freqs, ts)
#DFCM_simple
DFCM <- function(shape, L=max(shape@rpos[,1]), a=max(shape@a), g=shape@g, h=shape@h, pc=shape@pc, numdiv=length(shape@rpos[1,]),
tilt=shape@theta, cm=1500, pm=1.025, f, alpha=0.8, method="two-ray"){
if(method == "two-ray"){
ca <- h*cm #animal soundspeed
pa <- g*pm #animal density
a_new <- L/numdiv
R12 <- ((pa*ca)/(cm*pm)-1) / (pa*ca/(pm*cm)+1)
km <- kcalc(f,cm)
ka <- kcalc(f,ca)
T12 <- 2*(pa*ca/(pm*cm))/(1+(pa*ca/(pm*cm)))
T21 <- 2*(pm*cm/(pa*ca))/(1+(pm*cm/(pa*ca)))
mu <- -pi/2*km*a_new / (km*a_new+0.4)
Io <- 1 - T12 * T21 * exp(1i*4*ka*a_new) * exp(1i*mu)
fbs <- 0.5*sqrt(pc*a_new) * R12 * exp(-1i*2*km*a_new) * Io * exp(-alpha*(2*(tilt-pi/2)*pc/L)^2)
TS <- 20*log10(abs(fbs))
return(TS)
}
}
DFCM_simple(anc, f=120e3)
freqs <- seq(1e3,600e3,1e3)
ts <- rep(NA, length(freqs))
for(i in 1:length(freqs)){
ts[i] <- DFCM_simple(anc, f=freqs[i])
}
plot(freqs, ts)
?SDWBA
tsd <- rep(NA, length(freqs)){
ts[i] <- SDWBA(anc, c=1500, f=freqs[i], phi=0, tilt=shape@theta)
}
for(i in 1:length(freqs)){
tsd[i] <- SDWBA(anc, c=1500, f=freqs[i], phi=0, tilt=shape@theta)
}
tsd <- rep(NA, length(freqs))
for(i in 1:length(freqs)){
tsd[i] <- SDWBA(anc, c=1500, f=freqs[i], phi=0, tilt=shape@theta)
}
plot(ts); points(tsd, col="red", pch=19)
plot(freqs, ts); points(tsd, col="red", pch=19)
plot(freqs, ts); points(freqs, tsd, col="red", pch=19)
freqs <- seq(1e3,300e3,5e3)
ts <- rep(NA, length(freqs))
for(i in 1:length(freqs)){
ts[i] <- DFCM_simple(anc, f=freqs[i])
}
plot(freqs, ts)
tsd <- rep(NA, length(freqs))
for(i in 1:length(freqs)){
tsd[i] <- SDWBA(anc, c=1500, f=freqs[i], phi=0, tilt=shape@theta)
}
plot(freqs, ts); points(freqs, tsd, col="red", pch=19)
document()
?DFCM
document
document()
?DFCM
document()
?DFCM
document()
?DFCM
document()
?DFCM
document()
DFCM <- function(shape=NULL, L=max(shape@rpos[,1]), a=max(shape@a), g=shape@g, h=shape@h, pc=shape@pc, numdiv=length(shape@rpos[1,]),
tilt=shape@theta, cm=1500, pm=1.025, f, alpha=0.8, method="two-ray"){
if(method == "two-ray"){
ca <- h*cm #animal soundspeed
pa <- g*pm #animal density
a_new <- L/numdiv
R12 <- ((pa*ca)/(cm*pm)-1) / (pa*ca/(pm*cm)+1)
km <- kcalc(f,cm)
ka <- kcalc(f,ca)
T12 <- 2*(pa*ca/(pm*cm))/(1+(pa*ca/(pm*cm)))
T21 <- 2*(pm*cm/(pa*ca))/(1+(pm*cm/(pa*ca)))
mu <- -pi/2*km*a_new / (km*a_new+0.4)
Io <- 1 - T12 * T21 * exp(1i*4*ka*a_new) * exp(1i*mu)
fbs <- 0.5*sqrt(pc*a_new) * R12 * exp(-1i*2*km*a_new) * Io * exp(-alpha*(2*(tilt-pi/2)*pc/L)^2)
TS <- 20*log10(abs(fbs))
return(TS)
}
}
document()
?DFCM
document()
?DFCM
citation(elliptic)
citation("elliptic")
document()
?SDWBA
?FFS
document()
citation("acousticTS")
?marelac
citation("marelac")
document
document()
citation("acousticTS")
?marelac
citation("marelac")
document()
citation("acousticTS")
document()
citation("acousticTS")
document()
document()
citation("acousticTS")
?acousticTS
??acousticTS
?SDWBA
