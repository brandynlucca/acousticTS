text=element_text(size=20), axis.text=element_text(size=20,colour="black"),
legend.title=element_blank()) +
labs(y="Maximum carapace height (mm)",
x="SL2 Length (mm)")
mass <- read.csv("C:/Users/Brandyn/Downloads/ALES.Summer_2019.CAKrill2019_IDs_mass.csv")
colnames(mass) <- c("Length","Width","Height","An_ID","Bump","Mass1","Mass2","Mass3","RealMass","Bump2","Bump3")
krillmass <- mass %>%
filter(An_ID %in% unique(krillspp$An_ID) & RealMass > 0)
ggplot(data=krillmass) +
geom_histogram(aes(x=RealMass*1e3), color="black", fill="red", bins=20) +
theme_bw() +
theme(panel.grid=element_blank(),
text=element_text(size=20), axis.text=element_text(size=20,colour="black")) +
scale_y_continuous(expand=c(0,0.01)) +
labs(x="Empirical mass (mg)", y="Frequency") +
facet_wrap(~Species)
ggplot(data=krillmass) +
geom_point(aes(y=RealMass, x=Length), size=2) +
theme_bw() +
theme(panel.grid=element_blank(),
text=element_text(size=20), axis.text=element_text(size=20,colour="black")) +
scale_y_continuous(expand=c(0,0.01)) +
labs(y="Empirical mass (g)", x="SL2 Length (mm)")
theme_bw() +
theme(panel.grid=element_blank(),
text=element_text(size=20), axis.text=element_text(size=20,colour="black")) +
labs(y="log10(Empirical mass [mg])", x="log10(SL2 Length [mm])")
theme_bw() +
theme(panel.grid=element_blank(),
text=element_text(size=20), axis.text=element_text(size=20,colour="black")) +
labs(y="log10(Empirical mass [mg])", x="log10(SL2 Length [mm])")
theme_bw() +
theme(panel.grid=element_blank(),
text=element_text(size=20), axis.text=element_text(size=20,colour="black")) +
labs(y="log10(Empirical mass [mg])", x="log10(SL2 Length [mm])")
ggplot(data=krillmass, aes(y=log10(RealMass*1000), x=log10(Length))) +
geom_smooth(method="lm", color="red", size=2)
theme_bw() +
theme(panel.grid=element_blank(),
text=element_text(size=20), axis.text=element_text(size=20,colour="black")) +
labs(y="log10(Empirical mass [mg])", x="log10(SL2 Length [mm])")
ggplot(data=krillmass, aes(y=log10(RealMass*1000), x=log10(Length))) +
geom_smooth(method="lm", color="red", size=2) +
geom_point(size=2) +
geom_point(data=krillmass[krillmass$])
theme_bw()
ggplot(data=krillmass, aes(y=log10(RealMass*1000), x=log10(Length))) +
geom_smooth(method="lm", color="red", size=2) +
geom_point(size=2) +
geom_point(data=krillmass[krillmass$]) +
theme_bw() +
theme(panel.grid=element_blank(),
text=element_text(size=20), axis.text=element_text(size=20,colour="black")) +
labs(y="log10(Empirical mass [mg])", x="log10(SL2 Length [mm])")
ggplot(data=krillmass, aes(y=log10(RealMass*1000), x=log10(Length))) +
geom_smooth(method="lm", color="red", size=2) +
geom_point(size=2) +
geom_point(data=krillmass[krillmass$])
ggplot(data=spp_mass, aes(y=log10(RealMass*1000), x=log10(Length.x))) +
geom_smooth(method="lm", color="red", size=2) +
geom_point(size=2) +
geom_point(data=spp_mass[spp_mass$Notes == "eggs",], aes(x=log10(Length.x), y=log10(RealMass*1e3)), size=2, color="orange") +
theme_bw() +
theme(panel.grid=element_blank(),
text=element_text(size=20), axis.text=element_text(size=20,colour="black")) +
labs(y="log10(Empirical mass [mg])", x="log10(SL2 Length [mm])")
spp_mass <- merge(krillmass, krillspp, by="An_ID")
aggregate(RealMass~Species, spp_mass, function(x){mean(x)*1e3})
aggregate(RealMass~Species, spp_mass, function(x){sd(x)/sqrt(length(x))*1e3})
kruskal.test(RealMass~Species, spp_mass)
pairwise.wilcox.test(spp_mass$RealMass, spp_mass$Species)
ggplot(data=spp_mass, aes(y=log10(RealMass*1000), x=log10(Length.x))) +
geom_smooth(method="lm", color="red", size=2) +
geom_point(size=2) +
geom_point(data=spp_mass[spp_mass$Notes == "eggs",], aes(x=log10(Length.x), y=log10(RealMass*1e3)), size=2, color="orange") +
theme_bw() +
theme(panel.grid=element_blank(),
text=element_text(size=20), axis.text=element_text(size=20,colour="black")) +
labs(y="log10(Empirical mass [mg])", x="log10(SL2 Length [mm])")
ggplot(data=spp_mass, aes(y=log10(RealMass*1e3), x=log10(Length.x), color=Species, fill=Species)) +
geom_smooth(aes(color=Species), method="lm", size=2, alpha=0.25) +
geom_point(size=2) +
theme_bw() +
theme(panel.grid=element_blank(),
text=element_text(size=20), axis.text=element_text(size=20,colour="black"),
legend.title=element_blank()) +
labs(y="log10(Empirical mass [mg])", x="log10(SL1 Length [mm])")
ggplot(data=spp_mass, aes(y=log10(RealMass*1e3), x=log10(Length.x), color=Species, fill=Species)) +
geom_smooth(aes(color=Species), method="lm", size=2, alpha=0.25) +
geom_point(size=2) +
theme_bw() +
theme(panel.grid=element_blank(),
text=element_text(size=20), axis.text=element_text(size=20,colour="black"),
legend.title=element_blank()) +
labs(y="log10(Empirical mass [mg])", x="log10(SL2 Length [mm])")
ggplot(data=krillspp) +
geom_smooth(aes(x=Length, y=g, color=Species, fill=Species), alpha=0.1, method="lm") +
geom_point(aes(x=Length, y=g, color=Species), size=2) +
theme_bw() +
theme(panel.grid=element_blank(),
text=element_text(size=20), axis.text=element_text(size=20,colour="black"),
legend.title=element_blank()) +
labs(y=expression(paste(italic("g")," (",rho[animal]," /",rho[seawater],")",sep="")),
x="SL2 Length (mm)")
tsc %>%
filter(Frequency %in% c(38e3,70e3,120e3,200e3)) %>%
group_by(Animal, Frequency) %>%
summarise(TST=median(TS)) %>%
inner_join(., tsemp, by=c("Animal","Frequency")) %>%
mutate(Diff=TSE-TST) %>%
group_by(Frequency) %>%
mutate(DiffMed=median(Diff), DiffMean=mean(Diff)) %>%
ggplot(., aes(x=as.factor(Frequency*1e-3), y=Diff)) +
geom_hline(aes(yintercept=0), linetype=1, colour="gray10", size=1) +
geom_violin(scale="width") +
geom_jitter(alpha=0.75, color="gray80", size=2, width=0.25) +
geom_point(aes(y=DiffMean), size=4, shape=19) +
geom_point(aes(y=DiffMed), size=4, shape=4) +
theme_bw() +
theme(text=element_text(size=18), axis.text=element_text(size=16, colour="black"),
panel.grid=element_blank()) +
labs(y=expression(paste("Model difference (",Delta,"dB re: 1",m^2,")")),
x="Frequency (kHz)") +
scale_y_continuous(limits=c(-20,20))
tsc %>%
filter(Frequency %in% c(38e3,70e3,120e3,200e3)) %>%
group_by(Animal, Frequency) %>%
summarise(TST=median(TS)) %>%
inner_join(., tsemp, by=c("Animal","Frequency")) %>%
mutate(Diff=TSE-TST) %>%
group_by(Frequency) %>%
mutate(DiffMed=median(Diff), DiffMean=mean(Diff))
tsc %>%
filter(Frequency %in% c(38e3,70e3,120e3,200e3)) %>%
group_by(Animal, Frequency) %>%
summarise(TST=median(TS)) %>%
inner_join(., tsemp, by=c("Animal","Frequency")) %>%
mutate(Diff=TSE-TST) %>%
group_by(Frequency) %>%
mutate(DiffMed=median(Diff), DiffMean=mean(Diff), DiffSD=sd(Diff), n=n())
ggplot() +
theme_bw() +
theme(text=element_text(size=18), axis.text=element_text(size=16, color="black"),
panel.grid=element_blank()) +
labs(x="Frequency (kHz)",
y=expression(paste("Target strength (dB re: 1 ",m^2,")"))) +
coord_cartesian(xlim=c(35,210), ylim=c(-130,-60)) +
geom_ribbon(data=ts_sub_lo, aes(x=Freq*1e-3, ymin=Min, ymax=Max),
color="gray80", fill="gray80") +
geom_crossbar(data=ts_sub_120, aes(x=Freq*1e-3, y=Median, ymin=Min, ymax=Max),
color="gray80", fill="gray80", size=1.25) +
geom_ribbon(data=ts_sub_hi, aes(x=Freq*1e-3, ymin=Min, ymax=Max),
color="gray80", fill="gray80") +
geom_path(data=ts_sub_lo, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_point(data=ts_sub_120, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_path(data=ts_sub_hi, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_path(data=ts_emp, aes(x=Frequency*1e-3, y=TS_offset), color="red", size=2) +
geom_point(data=ts_emp4, aes(x=120, y=TS_offset), color="red", size=2) +
geom_path(data=ts_emp2, aes(x=Frequency*1e-3, y=TS_offset), color="red", size=2) +
geom_path(data=ts_emp[ts_emp$Frequency <= 49*1e3,], aes(x=Frequency*1e-3, y=TS_offset), color="orange", size=2) +
facet_wrap(~as.factor(Animal))
ggplot() +
theme_bw() +
theme(text=element_text(size=18), axis.text=element_text(size=16, color="black"),
panel.grid=element_blank(), strip.background=element_blank(),
strip.text=element_text(size=12)) +
labs(x="Frequency (kHz)",
y=expression(paste("Target strength (dB re: 1 ",m^2,")"))) +
coord_cartesian(xlim=c(35,210), ylim=c(-130,-60)) +
geom_ribbon(data=ts_sub_lo, aes(x=Freq*1e-3, ymin=Min, ymax=Max),
color="gray80", fill="gray80") +
geom_crossbar(data=ts_sub_120, aes(x=Freq*1e-3, y=Median, ymin=Min, ymax=Max),
color="gray80", fill="gray80", size=1.25) +
geom_ribbon(data=ts_sub_hi, aes(x=Freq*1e-3, ymin=Min, ymax=Max),
color="gray80", fill="gray80") +
geom_path(data=ts_sub_lo, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_point(data=ts_sub_120, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_path(data=ts_sub_hi, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_path(data=ts_emp, aes(x=Frequency*1e-3, y=TS_offset), color="red", size=2) +
geom_point(data=ts_emp4, aes(x=120, y=TS_offset), color="red", size=2) +
geom_path(data=ts_emp2, aes(x=Frequency*1e-3, y=TS_offset), color="red", size=2) +
geom_path(data=ts_emp[ts_emp$Frequency <= 49*1e3,], aes(x=Frequency*1e-3, y=TS_offset), color="orange", size=2) +
facet_wrap(~as.factor(Animal))
ggplot() +
theme_bw() +
theme(text=element_text(size=18), axis.text=element_text(size=16, color="black"),
panel.grid=element_blank(), strip.background=element_blank(),
strip.text=element_text(size=12)) +
labs(x="Frequency (kHz)",
y=expression(paste("Target strength (dB re: 1 ",m^2,")"))) +
coord_cartesian(xlim=c(35,210), ylim=c(-130,-60)) +
geom_ribbon(data=ts_sub_lo, aes(x=Freq*1e-3, ymin=Min, ymax=Max),
color="gray80", fill="gray80") +
geom_ribbon(data=ts_sub_hi, aes(x=Freq*1e-3, ymin=Min, ymax=Max),
color="gray80", fill="gray80") +
geom_crossbar(data=ts_sub_120, aes(x=Freq*1e-3, y=Median, ymin=Min, ymax=Max),
color="gray80", fill="gray80", size=1.25) +
geom_ribbon(data=ts_sub_lo, aes(x=Freq*1e-3, ymin=Lower95, ymax=Upper95),
color="gray60", fill="gray60") +
geom_ribbon(data=ts_sub_hi, aes(x=Freq*1e-3, ymin=Lower95, ymax=Upper95),
color="gray60", fill="gray60") +
geom_crossbar(data=ts_sub_120, aes(x=Freq*1e-3, y=Median, ymin=Lower95, ymax=Upper95),
color="gray60", fill="gray60", size=1.25) +
geom_path(data=ts_sub_lo, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_point(data=ts_sub_120, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_path(data=ts_sub_hi, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_path(data=ts_emp, aes(x=Frequency*1e-3, y=TS_offset), color="red", size=2) +
geom_point(data=ts_emp4, aes(x=120, y=TS_offset), color="red", size=2) +
geom_path(data=ts_emp2, aes(x=Frequency*1e-3, y=TS_offset), color="red", size=2) +
geom_path(data=ts_emp[ts_emp$Frequency <= 49*1e3,], aes(x=Frequency*1e-3, y=TS_offset), color="orange", size=2) +
facet_wrap(~as.factor(Animal))
ggplot() +
theme_bw() +
theme(text=element_text(size=18), axis.text=element_text(size=16, color="black"),
panel.grid=element_blank(), strip.background=element_blank(),
strip.text=element_text(size=12)) +
labs(x="Frequency (kHz)",
y=expression(paste("Target strength (dB re: 1 ",m^2,")"))) +
coord_cartesian(xlim=c(35,210), ylim=c(-130,-60)) +
geom_ribbon(data=ts_sub_lo, aes(x=Freq*1e-3, ymin=Min, ymax=Max),
color="gray80", fill="gray80") +
geom_ribbon(data=ts_sub_hi, aes(x=Freq*1e-3, ymin=Min, ymax=Max),
color="gray80", fill="gray80") +
geom_crossbar(data=ts_sub_120, aes(x=Freq*1e-3, y=Median, ymin=Min, ymax=Max),
color="gray80", fill="gray80", size=1.25) +
geom_ribbon(data=ts_sub_lo, aes(x=Freq*1e-3, ymin=Lower95, ymax=Upper95),
color="gray60", fill="gray60") +
geom_ribbon(data=ts_sub_hi, aes(x=Freq*1e-3, ymin=Lower95, ymax=Upper95),
color="gray60", fill="gray60") +
geom_crossbar(data=ts_sub_120, aes(x=Freq*1e-3, y=Median, ymin=Lower95, ymax=Upper95),
color="gray60", fill="gray60", size=1.25) +
geom_path(data=ts_sub_lo, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_point(data=ts_sub_120, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_path(data=ts_sub_hi, aes(x=Freq*1e-3, y=Median), color="black", size=1.5)
ggplot() +
theme_bw() +
theme(text=element_text(size=18), axis.text=element_text(size=16, color="black"),
panel.grid=element_blank(), strip.background=element_blank(),
strip.text=element_text(size=12)) +
labs(x="Frequency (kHz)",
y=expression(paste("Target strength (dB re: 1 ",m^2,")"))) +
coord_cartesian(xlim=c(35,210), ylim=c(-130,-60)) +
geom_ribbon(data=ts_sub_lo, aes(x=Freq*1e-3, ymin=Min, ymax=Max),
color="gray80", fill="gray80") +
geom_ribbon(data=ts_sub_hi, aes(x=Freq*1e-3, ymin=Min, ymax=Max),
color="gray80", fill="gray80") +
geom_crossbar(data=ts_sub_120, aes(x=Freq*1e-3, y=Median, ymin=Min, ymax=Max),
color="gray80", fill="gray80", size=1.25) +
geom_ribbon(data=ts_sub_lo, aes(x=Freq*1e-3, ymin=Lower95, ymax=Upper95),
color="gray60", fill="gray60") +
geom_ribbon(data=ts_sub_hi, aes(x=Freq*1e-3, ymin=Lower95, ymax=Upper95),
color="gray60", fill="gray60") +
geom_crossbar(data=ts_sub_120, aes(x=Freq*1e-3, y=Median, ymin=Lower95, ymax=Upper95),
color="gray60", fill="gray60", size=1.25) +
geom_path(data=ts_sub_lo, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_point(data=ts_sub_120, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_path(data=ts_sub_hi, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_path(data=ts_emp, aes(x=Frequency*1e-3, y=TS_offset), color="red", size=2) +
geom_point(data=ts_emp4, aes(x=120, y=TS_offset), color="red", size=2) +
geom_path(data=ts_emp2, aes(x=Frequency*1e-3, y=TS_offset), color="red", size=2) +
geom_path(data=ts_emp[ts_emp$Frequency <= 49*1e3,], aes(x=Frequency*1e-3, y=TS_offset), color="orange", size=2)
ggplot() +
theme_bw() +
theme(text=element_text(size=18), axis.text=element_text(size=16, color="black"),
panel.grid=element_blank(), strip.background=element_blank(),
strip.text=element_text(size=12)) +
labs(x="Frequency (kHz)",
y=expression(paste("Target strength (dB re: 1 ",m^2,")"))) +
coord_cartesian(xlim=c(35,210), ylim=c(-130,-60)) +
geom_ribbon(data=ts_sub_lo, aes(x=Freq*1e-3, ymin=Min, ymax=Max),
color="gray80", fill="gray80") +
geom_ribbon(data=ts_sub_hi, aes(x=Freq*1e-3, ymin=Min, ymax=Max),
color="gray80", fill="gray80") +
geom_crossbar(data=ts_sub_120, aes(x=Freq*1e-3, y=Median, ymin=Min, ymax=Max),
color="gray80", fill="gray80", size=1.25) +
geom_ribbon(data=ts_sub_lo, aes(x=Freq*1e-3, ymin=Lower95, ymax=Upper95),
color="gray60", fill="gray60") +
geom_ribbon(data=ts_sub_hi, aes(x=Freq*1e-3, ymin=Lower95, ymax=Upper95),
color="gray60", fill="gray60") +
geom_crossbar(data=ts_sub_120, aes(x=Freq*1e-3, y=Median, ymin=Lower95, ymax=Upper95),
color="gray60", fill="gray60", size=1.25) +
geom_path(data=ts_sub_lo, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_point(data=ts_sub_120, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_path(data=ts_sub_hi, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_path(data=ts_emp, aes(x=Frequency*1e-3, y=TS_offset), color="red", size=2) +
geom_point(data=ts_emp4, aes(x=120, y=TS_offset), color="red", size=2) +
geom_path(data=ts_emp2, aes(x=Frequency*1e-3, y=TS_offset), color="red", size=2) +
geom_path(data=ts_emp[ts_emp$Frequency <= 49*1e3,], aes(x=Frequency*1e-3, y=TS_offset), color="orange", size=2) +
facet_wrap(~as.factor(Animal))
ggplot() +
theme_bw() +
theme(text=element_text(size=18), axis.text=element_text(size=16, color="black"),
panel.grid=element_blank(), strip.background=element_blank(),
strip.text=element_text(size=12)) +
labs(x="Frequency (kHz)",
y=expression(paste("Target strength (dB re: 1 ",m^2,")"))) +
coord_cartesian(xlim=c(35,210), ylim=c(-130,-60)) +
geom_ribbon(data=ts_sub_lo, aes(x=Freq*1e-3, ymin=Min, ymax=Max),
color="gray80", fill="gray80") +
geom_ribbon(data=ts_sub_hi, aes(x=Freq*1e-3, ymin=Min, ymax=Max),
color="gray80", fill="gray80") +
geom_crossbar(data=ts_sub_120, aes(x=Freq*1e-3, y=Median, ymin=Min, ymax=Max),
color="gray80", fill="gray80", size=1.25) +
geom_ribbon(data=ts_sub_lo, aes(x=Freq*1e-3, ymin=Lower95, ymax=Upper95),
color="gray60", fill="gray60") +
geom_ribbon(data=ts_sub_hi, aes(x=Freq*1e-3, ymin=Lower95, ymax=Upper95),
color="gray60", fill="gray60") +
geom_crossbar(data=ts_sub_120, aes(x=Freq*1e-3, y=Median, ymin=Lower95, ymax=Upper95),
color="gray60", fill="gray60", size=1.25) +
geom_path(data=ts_sub_lo, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_point(data=ts_sub_120, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_path(data=ts_sub_hi, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_path(data=ts_emp, aes(x=Frequency*1e-3, y=TS_offset), color="red", size=2)
ggplot() +
theme_bw() +
theme(text=element_text(size=18), axis.text=element_text(size=16, color="black"),
panel.grid=element_blank(), strip.background=element_blank(),
strip.text=element_text(size=12)) +
labs(x="Frequency (kHz)",
y=expression(paste("Target strength (dB re: 1 ",m^2,")"))) +
coord_cartesian(xlim=c(35,210), ylim=c(-130,-60)) +
geom_ribbon(data=ts_sub_lo, aes(x=Freq*1e-3, ymin=Min, ymax=Max),
color="gray80", fill="gray80") +
geom_crossbar(data=ts_sub_120, aes(x=Freq*1e-3, y=Median, ymin=Min, ymax=Max),
color="gray80", fill="gray80", size=1.25) +
geom_ribbon(data=ts_sub_hi, aes(x=Freq*1e-3, ymin=Min, ymax=Max),
color="gray80", fill="gray80") +
geom_path(data=ts_sub_lo, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_point(data=ts_sub_120, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_path(data=ts_sub_hi, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_path(data=ts_emp, aes(x=Frequency*1e-3, y=TS_offset), color="red", size=2) +
geom_point(data=ts_emp4, aes(x=120, y=TS_offset), color="red", size=2) +
geom_path(data=ts_emp2, aes(x=Frequency*1e-3, y=TS_offset), color="red", size=2) +
geom_path(data=ts_emp[ts_emp$Frequency <= 49*1e3,], aes(x=Frequency*1e-3, y=TS_offset), color="orange", size=2) +
facet_wrap(~as.factor(Animal))
####################
# ts_theor <- read.csv("G:/CAKrill.2019/29OCT2019_theoretical_TS_run.csv")
# ts_emp <- read.csv("G:/CAkrill.2019/test_animal_141.csv")
# ts_emp$Animal <- "141"
# ts_emp1 <- read.csv("G:/CAkrill.2019/test_animal_147.csv")
# ts_emp1$Animal <- "147"
# ts_emp <- rbind(ts_emp, ts_emp1)
# ts_emp1 <- read.csv("G:/CAkrill.2019/test_animal_149.csv")
# ts_emp1$Animal <- "149"
# ts_emp <- rbind(ts_emp, ts_emp1)
# ts_emp1 <- read.csv("G:/CAkrill.2019/test_animal_159.csv")
# ts_emp1$Animal <- "159"
# ts_emp <- rbind(ts_emp, ts_emp1)
# ts_emp1 <- read.csv("G:/CAkrill.2019/test_animal_160.csv")
# ts_emp1$Animal <- "160"
# ts_emp <- rbind(ts_emp, ts_emp1)
# ts_emp1 <- read.csv("G:/CAkrill.2019/test_animal_162.csv")
# ts_emp1$Animal <- "162"
# ts_emp <- rbind(ts_emp, ts_emp1)
ts_emp <- data.frame(Frequency=c(), TS_offset=c(), Animal=c())
flo <- list.files("G:/CAkrill.2019/lo_emp/", full.names=T)
for(i in 1:length(flo)){
file <- read.csv(flo[i], header=T)
str <- stringr::str_split(flo[i],"[/_,+]+")[[1]][7]
file$Animal <- as.numeric(str)
ts_emp <- rbind(ts_emp, file)
}
# ts_emp2 <- read.csv("G:/CAkrill.2019/test_animal_141_lo.csv")
# ts_emp2$Animal <- "141"
# ts_emp3 <- read.csv("G:/CAkrill.2019/test_animal_147_lo.csv")
# ts_emp3$Animal <- "147"
# ts_emp2 <- rbind(ts_emp2, ts_emp3)
# ts_emp3 <- read.csv("G:/CAkrill.2019/test_animal_149_lo.csv")
# ts_emp3$Animal <- "149"
# ts_emp2 <- rbind(ts_emp2, ts_emp3)
# ts_emp3 <- read.csv("G:/CAkrill.2019/test_animal_159_lo.csv")
# ts_emp3$Animal <- "159"
# ts_emp2 <- rbind(ts_emp2, ts_emp3)
# ts_emp3 <- read.csv("G:/CAkrill.2019/test_animal_160_lo.csv")
# ts_emp3$Animal <- "160"
# ts_emp2 <- rbind(ts_emp2, ts_emp3)
# ts_emp3 <- read.csv("G:/CAkrill.2019/test_animal_162_lo.csv")
# ts_emp3$Animal <- "162"
# ts_emp2 <- rbind(ts_emp2, ts_emp3)
ts_emp2 <- data.frame(Frequency=c(), TS_offset=c(), Animal=c())
fhi <- list.files("G:/CAkrill.2019/hi_emp/", full.names=T)
for(i in 1:length(fhi)){
file <- read.csv(fhi[i], header=T)
str <- stringr::str_split(fhi[i],"[/_.,+]+")[[1]][8]
file$Animal <- as.numeric(str)
ts_emp2 <- rbind(ts_emp2, file)
}
# ts_emp4 <- read.csv("G:/CAkrill.2019/test_animal_141_120.csv")
# ts_emp4$Animal <- "141"
# ts_emp5 <- read.csv("G:/CAkrill.2019/test_animal_147_120.csv")
# ts_emp5$Animal <- "147"
# ts_emp4 <- rbind(ts_emp4, ts_emp5)
# ts_emp5 <- read.csv("G:/CAkrill.2019/test_animal_149_120.csv")
# ts_emp5$Animal <- "149"
# ts_emp4 <- rbind(ts_emp4, ts_emp5)
# ts_emp5 <- read.csv("G:/CAkrill.2019/test_animal_159_120.csv")
# ts_emp5$Animal <- "159"
# ts_emp4 <- rbind(ts_emp4, ts_emp5)
# ts_emp5 <- read.csv("G:/CAkrill.2019/test_animal_160_120.csv")
# ts_emp5$Animal <- "160"
# ts_emp4 <- rbind(ts_emp4, ts_emp5)
# ts_emp5 <- read.csv("G:/CAkrill.2019/test_animal_162_120.csv")
# ts_emp5$Animal <- "162"
# ts_emp4 <- rbind(ts_emp4, ts_emp5)
ts_emp4 <- data.frame(Frequency=c(), TS_offset=c(), Animal=c())
f120 <- list.files("G:/CAkrill.2019/120_emp/", full.names=T)
for(i in 1:length(f120)){
file <- read.csv(f120[i], header=T)
str <- stringr::str_split(f120[i],"[/_,+]+")[[1]][7]
file$Animal <- as.numeric(str)
ts_emp4 <- rbind(ts_emp4, file)
}
# tsc <- ts_theor[ts_theor$Freq == 120e3,]
# colnames(tsc) <- c("Animal","TS","Frequency","Phase","h")
# tscagg <- aggregate(TS~Animal, tsc, median)
# tscagg <- tscagg[tscagg$Animal %in% unique(ts_emp4$Animal),]
# plot(ts_emp4$TS_offset - tscagg$TS)
# ts_120m <- merge(ts_emp4, ts_theor, by=c("Frequency","Animal"))
#Join the filesets
# fall <- rbind(ts_emp, ts_emp4)
#General unifying dataframe for facet wrapping
ts_sub <- ts_theor %>%
group_by(Animal,Freq) %>%
filter(Animal %in% unique(ts_emp4$Animal)) %>%
summarise(Median=median(TS),Max=max(TS),Min=min(TS),
Upper95=TS[order(TS)][171],
Lower95=TS[order(TS)][9])
#Separate out low wideband sweep for proper geom_ribbon shading
#NOTE: 175,178,181,183,189,199,208 all removed
ts_sub_lo <- ts_theor %>%
group_by(Animal,Freq) %>%
filter(Animal %in% unique(ts_emp4$Animal) &
Freq < 75e3) %>%
summarise(Median=median(TS),Max=max(TS),Min=min(TS),
Upper95=TS[order(TS)][171],
Lower95=TS[order(TS)][9])
#Separate out 120 kHz theoretical value for proper ranging on plot
ts_sub_120 <- ts_theor %>%
group_by(Animal,Freq) %>%
filter(Animal %in% unique(ts_emp4$Animal) &
Freq == 120e3) %>%
summarise(Median=median(TS),Max=max(TS),Min=min(TS),
Upper95=TS[order(TS)][171],
Lower95=TS[order(TS)][9])
# #Separate out high wideband sweep for proper geom_ribbon shading
# ts_sub_hi <- ts_theor %>%
#   group_by(Animal,Freq) %>%
#   filter(Animal %in% c(141,147,149,159,160,162) &
#            Freq > 120e3) %>%
#   summarise(Median=median(TS),Max=max(TS),Min=min(TS),
#             Upper95=TS[order(TS)][171],
#             Lower95=TS[order(TS)][9])
ts_sub_hi <- ts_theor %>%
group_by(Animal,Freq) %>%
filter(Animal %in% unique(ts_emp4$Animal) &
Freq > 120e3) %>%
summarise(Median=median(TS),Max=max(TS),Min=min(TS),
Upper95=TS[order(TS)][171],
Lower95=TS[order(TS)][9])
#Plot
require(ggplot2)
ts_theor$Animal <- as.numeric(ts_theor$Animal)
ggplot() +
theme_bw() +
theme(text=element_text(size=18), axis.text=element_text(size=16, color="black"),
panel.grid=element_blank(), strip.background=element_blank(),
strip.text=element_text(size=12)) +
labs(x="Frequency (kHz)",
y=expression(paste("Target strength (dB re: 1 ",m^2,")"))) +
coord_cartesian(xlim=c(35,210), ylim=c(-130,-60)) +
geom_ribbon(data=ts_sub_lo, aes(x=Freq*1e-3, ymin=Min, ymax=Max),
color="gray80", fill="gray80") +
geom_crossbar(data=ts_sub_120, aes(x=Freq*1e-3, y=Median, ymin=Min, ymax=Max),
color="gray80", fill="gray80", size=1.25) +
geom_ribbon(data=ts_sub_hi, aes(x=Freq*1e-3, ymin=Min, ymax=Max),
color="gray80", fill="gray80") +
geom_path(data=ts_sub_lo, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_point(data=ts_sub_120, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_path(data=ts_sub_hi, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_path(data=ts_emp, aes(x=Frequency*1e-3, y=TS_offset), color="red", size=2) +
geom_point(data=ts_emp4, aes(x=120, y=TS_offset), color="red", size=2) +
geom_path(data=ts_emp2, aes(x=Frequency*1e-3, y=TS_offset), color="red", size=2) +
geom_path(data=ts_emp[ts_emp$Frequency <= 49*1e3,], aes(x=Frequency*1e-3, y=TS_offset), color="orange", size=2) +
facet_wrap(~as.factor(Animal))
ggplot() +
theme_bw() +
theme(text=element_text(size=18), axis.text=element_text(size=16, color="black"),
panel.grid=element_blank(), strip.background=element_blank(),
strip.text=element_text(size=12)) +
labs(x="Frequency (kHz)",
y=expression(paste("Target strength (dB re: 1 ",m^2,")"))) +
coord_cartesian(xlim=c(35,210), ylim=c(-130,-60)) +
geom_ribbon(data=ts_sub_lo, aes(x=Freq*1e-3, ymin=Min, ymax=Max),
color="gray80", fill="gray80") +
geom_crossbar(data=ts_sub_120, aes(x=Freq*1e-3, y=Median, ymin=Min, ymax=Max),
color="gray80", fill="gray80", size=1.25) +
geom_ribbon(data=ts_sub_hi, aes(x=Freq*1e-3, ymin=Min, ymax=Max),
color="gray80", fill="gray80") +
geom_ribbon(data=ts_sub_lo, aes(x=Freq*1e-3, ymin=Lower95, ymax=Upper95),
color="gray60", fill="gray60") +
geom_ribbon(data=ts_sub_hi, aes(x=Freq*1e-3, ymin=Lower95, ymax=Upper95),
color="gray60", fill="gray60") +
geom_crossbar(data=ts_sub_120, aes(x=Freq*1e-3, y=Median, ymin=Lower95, ymax=Upper95),
color="gray60", fill="gray60", size=1.25) +
geom_path(data=ts_sub_lo, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_point(data=ts_sub_120, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_path(data=ts_sub_hi, aes(x=Freq*1e-3, y=Median), color="black", size=1.5) +
geom_path(data=ts_emp, aes(x=Frequency*1e-3, y=TS_offset), color="red", size=2) +
geom_point(data=ts_emp4, aes(x=120, y=TS_offset), color="red", size=2) +
geom_path(data=ts_emp2, aes(x=Frequency*1e-3, y=TS_offset), color="red", size=2) +
geom_path(data=ts_emp[ts_emp$Frequency <= 49*1e3,], aes(x=Frequency*1e-3, y=TS_offset), color="orange", size=2) +
facet_wrap(~as.factor(Animal))
